const p=(d,o,a)=>{const n=[];for(let[e,f]of d.entries())f&&(e===4&&(f=parseFloat(f.replace(/,/g,"."))),n.push({fieldId:e,fieldValue:f}));return o.map((e,f)=>{if(e){const t=a.find(i=>i.id===f);if(!t)return;for(let i of t.signs){const r={signPart:t.part,fieldId:i.id,fieldName:i.name,...i};if(typeof e=="object")for(let s of e)s===i.name&&n.push(r);else e===i.name&&n.push(r)}}}),n};export{p as g};
