import{am as d}from"./entry.7f028a03.js";import{a}from"./api.config.679aa266.js";const r=`${a.baseURL}/partners`;async function o(){return $fetch("/",{baseURL:r,method:"GET",headers:a.authHeader})}async function h(t){return $fetch(`/id/${t}`,{baseURL:r,method:"GET",headers:a.authHeader})}async function u(t){return $fetch("/add",{baseURL:r,method:"POST",headers:a.authHeader,body:t})}async function n(t){return $fetch(`/user/delete/${t}`,{baseURL:r,method:"DELETE",headers:a.authHeader})}async function f(t,e){return $fetch(`/update/${t}`,{baseURL:r,method:"PUT",headers:a.authHeader,body:e})}async function l(){try{return $fetch("/getCityForUser",{baseURL:r,method:"GET"})}catch(t){console.log(t)}}async function p(){try{return $fetch("/country",{baseURL:r,method:"GET",headers:a.authHeader})}catch(t){console.log(t)}}async function s(t){try{return $fetch(`/city/country/${t}`,{baseURL:r,method:"GET",headers:a.authHeader})}catch(e){console.log(e)}}async function C(){try{return $fetch("/city",{baseURL:r,method:"GET",headers:a.authHeader})}catch(t){console.log(t)}}async function P(t){return $fetch("/city/add",{baseURL:r,method:"POST",headers:a.authHeader,body:t})}async function m(t){return $fetch("/findByCity/data",{baseURL:r,method:"POST",headers:a.authHeader,body:t})}async function U(t){return $fetch(`/findByCity/${t}`,{baseURL:r,method:"GET",headers:a.authHeader})}const L=d({id:"partner",state:()=>({partners:[],partnersByType:[],country:[],cities:[],usersCity:[],usersPartners:[],currentPartner:null}),actions:{async fetchAllPartners(){this.partners=await o()},async fetchPartner(t){const e=await h(t);e&&(e.companySpec=JSON.parse(e.companySpec)),this.currentPartner=e},async addPartner(t){await u(t)},async deletePartner(t){await n(t),this.partners=this.partners.filter(e=>e.id!==t)},async deleteUser(t){await n(t),this.partners=this.partners.filter(e=>e.id!==t)},async updatePartner(t,e){console.log("data",e);const c=await f(t,e),i=this.partners.findIndex(y=>y.id===t);this.partners[i]=c},async fetchCountry(t){this.country=await p()},async findCityByCountry(t){this.cities=await s(t)},async findPartnerByType(t){this.cities=await s(t)},async fetchCity(){this.cities=await C()},async getCityForUser(){this.usersCity=await l()},async addCity(t){return P(t)},async findByCityByData(t){this.usersPartners=await m(t)},async findByCity(t){this.usersPartners=await U(t)}}});export{L as u};
